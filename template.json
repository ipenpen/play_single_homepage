{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "CloudConductor pattern template for building wordpress server”,

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2/OpenStack KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2/OpenStack instances",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "WebInstanceType" : {
      "Description" : "WebServer instance type",
      "Type" : "String",
      "Default" : "t2.small"
    }    "WebImageId" : {
      "Description" : "[computed] WebServer Image Id. This parameter is automatically filled by CloudConductor.",
      "Type" : "String"
    }
    "CloudConductorLocation" : {
      "Description" : "The IP address range of CloudConductor server to enable Consul api access to frontend instance.",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Mappings" : {
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16"
      }
    },
    "Subnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "CidrBlock" : "10.0.1.0/24",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "InternetGateway" },
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "RouteToInternetGateway" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
    "SubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
    "WebServer" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Role" : "web",
        "Frontend" : "true"
      },
      "Properties" : {
        "ImageId" : { "Ref" : "WebImageId" },
        "InstanceType" : { "Ref" : "WebInstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [{
           "DeviceIndex" : "0",
           "NetworkInterfaceId" : { "Ref" : "WebNetworkInterface" }
        }],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/sh -v\n",
          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WebWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",
          "# Set Parameters\n",
          "/bin/echo 'ROLE=web' >> /opt/cloudconductor/config\n",
          "/bin/echo 'STACK_NAME=", { "Ref": "AWS::StackName" }, "' >> /opt/cloudconductor/config\n",
          "/bin/echo 'RESOURCE_NAME=WebServer' >> /opt/cloudconductor/config\n",
          "/bin/echo 'REGION=", { "Ref": "AWS::Region" }, "' >> /opt/cloudconductor/config\n",
          "# Run Consul\n",
          "# this process is required because of init sequence.\n",
          "/etc/init.d/consul start || error_exit 'Failed to start consul agent'\n",
          "# Wait member-join event\n",
          "host_name=`hostname`\n",
          "for i in `seq 10`; do\n",
          "  if [ ! -z \"`/usr/local/bin/consul members | grep ${host_name}`\" ]; then\n",
          "    # Send success signal\n",
          "    /opt/aws/bin/cfn-signal -e 0 -r 'WebServer Setup complete' '", { "Ref" : "WebWaitHandle" }, "'\n",
          "    exit 0\n",
          "  fi\n",
          "  sleep 1\n",
          "done\n",
          "error_exit 'Failed to join the consul cluster.'\n"
        ]]}},
        "Tags" : [{"Key": "Name", "Value": "WebServer"}, {"Key": "Role", "Value": "web"}]
      }
    },
    "WebNetworkInterface" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "GroupSet" : [{"Ref": "SharedSecurityGroup"}, {"Ref": "WebSecurityGroup"}],
        "SubnetId" : { "Ref" : "Subnet" }
      }
    },
    "FrontendEIP" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : ["VPCGatewayAttachment", "SubnetRouteTableAssociation"],
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    "EIPAssociation" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "DependsOn" : "WebServer",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "FrontendEIP", "AllocationId" ]},
        "NetworkInterfaceId" : { "Ref" : "WebNetworkInterface" }
      }
    },
    "SharedSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Shared security group over all instances in platform/optional pattern",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation" }},
          {"IpProtocol" : "tcp", "FromPort" : "8501", "ToPort" : "8501", "CidrIp" : { "Ref" : "CloudConductorLocation" }},
          {"IpProtocol" : "tcp", "FromPort" : "8300", "ToPort" : "8302", "CidrIp" : "10.0.0.0/16"}
        ]
      }
    },
    "WebSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access, HTTP access via port 80",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },
    "WebWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "WebWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServer",
      "Properties" : {
        "Handle" : { "Ref" : "WebWaitHandle" },
        "Timeout" : "600"
      }
    },
  },
  "Outputs" : {
    "FrontendAddress" : {
      "Value" : { "Ref" : "FrontendEIP" },
      "Description" : "Frontend DNS name or IP address to access Consul api port from CloudConductor server. This output is required."
    },
    "VpcId" : {
      "Value" : { "Ref" : "VPC" },
      "Description" : "Reference of VPC to create subnet, security group on same VPC in optional pattern. This output is required."
    },
    "SubnetId" : {
      "Value" : { "Ref" : "Subnet" },
      "Description" : "Reference of subnet to connect same subnet when create instance in optional pattern. This output is required."
    },
    "ClusterAddresses" : {
      "Value" : { "Fn::GetAtt" : ["WebNetworkInterface", "PrimaryPrivateIpAddress"] },
      "Description" : "Private IP Address to join cluster. This output is required."
    },
    "SharedSecurityGroup" : {
      "Value" : { "Ref" : "SharedSecurityGroup" },
      "Description" : "Reference of shared security group to add rules from optional pattern. This output is required."
    }
  }
}
